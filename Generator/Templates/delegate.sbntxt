using System;
using System.Runtime.InteropServices;

namespace {{ namespace.name }}
{
    // AUTOGENERATED FILE - DO NOT MODIFY

    public delegate {{ return_value.symbol_reference | write_native_symbol_reference }} {{ managed_name }}({{ arguments | write_managed_arguments}});

    public delegate bool {{ managed_name }}Native({{ arguments | write_native_arguments}});

    public class {{ managed_name }}HandlerNotified
    {
        public event Action OnDestroyNotify;
        public {{ managed_name }}Native NativeCallback;

        private {{ managed_name }} managedCallback;
        private DestroyNotify DestroyNotify;
        private GCHandle gch;

        public {{ managed_name }}HandlerNotified({{ managed_name }} managed)
        {
            DestroyNotify = DestroyCallback;
            NativeCallback = NativeCallbackMarshaller;
            managedCallback = managed;
            gch = GCHandle.Alloc(this);
        }

        private bool NativeCallbackMarshaller({{ arguments | write_native_arguments}})
        {
            {{ include 'delegate.marshaller.sbntxt' arguments "managedCallback"}}
        }

        private void DestroyCallback(IntPtr userData)
        {
            OnDestroyNotify();

            // Allow for garbage collection
            gch.Free();
        }
    }
}
