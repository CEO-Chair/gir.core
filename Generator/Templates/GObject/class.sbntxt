{{-
func has_parent
    ret parent && (string.size parent) > 0
end 
func get_if_parent
    if has_parent
        ret $0 #': ' + parent
    end
    ret ''
end

func get_abstract
    if abstract
        ret ' abstract '
    end
    ret ' '
end
-}}

using System;
using GObject;
using System.Runtime.InteropServices;

namespace {{ namespace }}
{
    // AUTOGENERATED FILE - DO NOT MODIFY
    
    public{{get_abstract}}partial class {{ name }} {{ (': ' + parent) | get_if_parent }}
    {
{{if !fundamental}}
        private static readonly TypeDescriptor GTypeDescriptor = TypeDescriptor.For("{{ type_name }}", {{ name }}.get_type);
        
        #region Properties
{{~ for property in properties
    #include 'property.sbntxt' property
end ~}}
        #endregion

        #region Signals
        
{{~ for signal in signals
    include 'signal.sbntxt' signal
end ~}}

        #endregion

        {{if has_parent}} 
        #region Constructors
        protected internal {{ name }}(IntPtr ptr) : base(ptr) {}
        protected internal {{ name }}(params ConstructParameter[] properties) : base(properties) {}
        #endregion
        {{ end }}
        
        #region Methods
{{if (string.size get_type_function) > 0 }}
        [DllImport("{{ dll_import }}", EntryPoint = "{{ get_type_function }}")]
        public static {{'new' | get_if_parent}} extern ulong get_type();
{{ end
else }}
        #region Methods
{{ end }}

{{for method in all_methods
    include 'method.sbntxt' method
end }}
        #endregion
    }
}
